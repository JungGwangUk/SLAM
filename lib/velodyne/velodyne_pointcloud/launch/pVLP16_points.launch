<!-- -*- mode: XML -*- -->
<!-- run velodyne_pointcloud/CloudNodelet in a nodelet manager for a VLP-16 -->

<launch>
<group ns="vlp_t">
  <!-- declare arguments with default values -->
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="tf" default="$(find velodyne_pointcloud)/params/tf/top_lidar.yaml"/>
  <arg name="frame_id" default="velodyne" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  <arg name="distance_threshold" default="true" />
  <arg name="lidar_compensate" default="false" />
  <arg name="max_range" default="130.0" />
  <arg name="min_range" default="0.4" />

  <!-- start nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" />

  <!-- start cloud nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="tf" default="$(arg tf)"/> 
    <arg name="calibration" value="$(arg calibration)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="distance_threshold" value="$(arg distance_threshold)"/>
    <arg name="lidar_compensate" value="$(arg lidar_compensate)"/>
    <arg name="max_range" value="$(arg max_range)"/>
    <arg name="min_range" value="$(arg min_range)"/>
  </include>
</group>

<group ns="vlp_l">
  <!-- declare arguments with default values -->
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="tf" default="$(find velodyne_pointcloud)/params/tf/left_lidar.yaml"/>
  <arg name="frame_id" default="velodyne" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  <arg name="distance_threshold" default="true" />
  <arg name="lidar_compensate" default="false" />
  <arg name="max_range" default="130.0" />
  <arg name="min_range" default="0.4" />

  <!-- start nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" />

  <!-- start cloud nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="calibration" value="$(arg calibration)"/>
    <arg name="tf" default="$(arg tf)"/> 
    <arg name="manager" value="$(arg manager)" />
    <arg name="distance_threshold" value="$(arg distance_threshold)"/>
    <arg name="lidar_compensate" value="$(arg lidar_compensate)"/>
    <arg name="max_range" value="$(arg max_range)"/>
    <arg name="min_range" value="$(arg min_range)"/>
  </include>
</group>

<group ns="vlp_r">
  <!-- declare arguments with default values -->
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="tf" default="$(find velodyne_pointcloud)/params/tf/right_lidar.yaml"/>
  <arg name="frame_id" default="velodyne" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  <arg name="distance_threshold" default="true" />
  <arg name="lidar_compensate" default="false" />
  <arg name="max_range" default="130.0" />
  <arg name="min_range" default="0.4" />

  <!-- start nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" />
  
  <!-- start cloud nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="calibration" value="$(arg calibration)"/>
    <arg name="tf" default="$(arg tf)"/> 
    <arg name="manager" value="$(arg manager)" />
    <arg name="distance_threshold" value="$(arg distance_threshold)"/>
    <arg name="lidar_compensate" value="$(arg lidar_compensate)"/>
    <arg name="max_range" value="$(arg max_range)"/>
    <arg name="min_range" value="$(arg min_range)"/>
  </include>
</group>
</launch>
